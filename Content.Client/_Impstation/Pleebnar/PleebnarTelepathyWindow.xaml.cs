using Content.Client.UserInterface.Controls;
using Content.Shared._Impstation.Pleebnar;
using Content.Shared.Speech;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client._Impstation.Pleebnar;

[GenerateTypedNameReferences]
public sealed partial class PleebnarTelepathyWindow : FancyWindow
{
    public Action<string?>? OnVisionSelect;
    public Action? OnConfirm;
    private string? _vision;
    private List<(string, string)> _visions = new();

    public PleebnarTelepathyWindow()
    {
        RobustXamlLoader.Load(this);

        PleebnarVisionSelector.OnItemSelected += args =>
        {
            OnVisionSelect?.Invoke((string?) args.Button.GetItemMetadata(args.Id));
            PleebnarVisionSelector.SelectId(args.Id);
        };
    }
    public void ReloadVisions(IPrototypeManager proto)
    {
        foreach (var vision in proto.EnumeratePrototypes<PleebnarVisionPrototype>())
        {
            _visions.Add((Loc.GetString(vision.Name), vision.ID));
        }
        _visions.Sort((a, b) => a.Item1.CompareTo(b.Item1));
    }

    public void AddVisions()
    {
        PleebnarVisionSelector.Clear();

        AddVision(Loc.GetString("pleebnar-vision-none-name"), null);
        foreach (var (name, id) in _visions)
        {
            AddVision(name, id);
        }
    }

    private void AddVision(string name, string? vision)
    {
        var id = PleebnarVisionSelector.ItemCount;
        PleebnarVisionSelector.AddItem(name);
        if (vision is {} metadata)
            PleebnarVisionSelector.SetItemMetadata(id, metadata);

        if (vision == _vision)
            PleebnarVisionSelector.SelectId(id);
    }

    public void UpdateState(string? vision)
    {
        _vision = vision;

        for (int id = 0; id < PleebnarVisionSelector.ItemCount; id++)
        {
            if (string.Equals(vision, PleebnarVisionSelector.GetItemMetadata(id)))
            {
                PleebnarVisionSelector.SelectId(id);
                break;
            }
        }
    }
}
