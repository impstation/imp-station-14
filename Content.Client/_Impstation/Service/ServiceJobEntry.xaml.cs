using System.Numerics;
using Content.Client.Message;
using Content.Client.Stylesheets;
using Content.Shared._Impstation.Service;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._Impstation.Service;

[GenerateTypedNameReferences]
public sealed partial class ServiceJobEntry : BoxContainer
{
    private bool _selected;
    public Action? OnSelectButtonPressed;

    public ServiceJobEntry(ServiceJobPrototype job, IEntityManager entMan)
    {
        RobustXamlLoader.Load(this);

        NameLabel.SetMarkup(Loc.GetString(job.Name));
        DescriptionLabel.SetMarkup(Loc.GetString(job.Description));
        TimerLabel.SetMarkup(Loc.GetString("service-job-console-timer-label", ("timer", job.Timer.ToString())));

        if (job.Sprite != null)
        {
            var texture = entMan.System<SpriteSystem>().Frame0(job.Sprite);

            // Make sure the actual size of the control is the same regardless of the texture size.
            IconRect.TextureScale = Vector2.One * (3f / (texture.Size.X / 32f));
            IconRect.Texture = texture;
        }

        SelectButton.OnPressed += _ => OnSelectButtonPressed?.Invoke();
    }

    public bool Disabled
    {
        get => SelectButton.Disabled;
        set => SelectButton.Disabled = value;
    }

    public bool Selected
    {
        get => _selected;
        set
        {
            if (_selected == value)
                return;

            _selected = value;

            if (_selected)
            {
                SelectButton.AddStyleClass(StyleBase.ButtonCaution);
                SelectButton.Text = Loc.GetString("service-job-console-select-button-text-claimed");
            }
        }
    }
}
