using Content.Shared.Traits;
using Content.Shared._Impstation.Traits;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.Lobby.UI.Roles;

[GenerateTypedNameReferences]
public sealed partial class TraitPreferenceSelector : Control
{
    public int Cost;

    public bool Preference
    {
        get => Checkbox.Pressed;
        set => Checkbox.Pressed = value;
    }

    // begin imp addition
    public HashSet<ProtoId<TraitSubcategoryPrototype>> Subcategories = new();
    // end imp addition

    public event Action<bool>? PreferenceChanged;

    public TraitPreferenceSelector(TraitPrototype trait)
    {
        RobustXamlLoader.Load(this);

        var text = trait.Cost != 0 ? trait.Cost > 0 ? $"[+{trait.Cost}] " : $"[{trait.Cost}] " : ""; // imp edit
        text += Loc.GetString(trait.Name);

        Cost = trait.Cost;
        Subcategories = trait.Subcategories;
        Checkbox.Text = text;
        Checkbox.OnToggled += OnCheckBoxToggled;

        if (trait.Description is { } desc)
        {
            Checkbox.ToolTip = Loc.GetString(desc);
        }
    }

    private void OnCheckBoxToggled(BaseButton.ButtonToggledEventArgs args)
    {
        PreferenceChanged?.Invoke(Preference);
    }
}
