using Content.Shared._Impstation.Service;
using Robust.Shared.Prototypes;
using Robust.Shared.Serialization.TypeSerializers.Implementations.Custom;

namespace Content.Server._Impstation.Service;

/// <summary>
///     Holds information for a station relating to chosen Service jobs.
/// </summary>
[RegisterComponent]
[Access(typeof(ServiceJobBoardSystem))]
public sealed partial class ServiceJobsDataComponent : Component
{
    /// <summary>
    ///     Jobs generated by the station.
    /// </summary>
    [DataField]
    public List<ProtoId<ServiceJobPrototype>>? StationJobs;

    /// <summary>
    ///     Accepted job.
    /// </summary>
    [DataField]
    public ServiceJobPrototype? ActiveJob;

    /// <summary>
    ///     If there is an active job, when will the timer end?
    /// </summary>
    [DataField(customTypeSerializer: typeof(TimeOffsetSerializer))]
    public TimeSpan? EndTime;
}
