# Base Mob - duplicate of BaseMobHumanoid, just without a few things that were causing errors when trying to copy them over.
- type: entity
  save: false
  parent:
  - BaseMob
  - MobDamageable
  - MobPolymorphable
  - MobCombat
  - StripableInventoryBase
  - MobRespirator
  - MobAtmosStandard
  - MobFlammable
  id: BaseMobMindlessClone
  abstract: true
  components:
  - type: Sprite
    layers:
    - map: [ "enum.HumanoidVisualLayers.Chest" ]
    - map: [ "enum.HumanoidVisualLayers.Head" ]
    - map: [ "enum.HumanoidVisualLayers.Snout" ]
    - map: [ "enum.HumanoidVisualLayers.Eyes" ]
    - map: [ "enum.HumanoidVisualLayers.RArm" ]
    - map: [ "enum.HumanoidVisualLayers.LArm" ]
    - map: [ "enum.HumanoidVisualLayers.RLeg" ]
    - map: [ "enum.HumanoidVisualLayers.LLeg" ]
    - map: [ "enum.HumanoidVisualLayers.UndergarmentBottom" ]
    - map: [ "enum.HumanoidVisualLayers.UndergarmentTop" ]
    - map: ["jumpsuit"]
    - map: ["enum.HumanoidVisualLayers.LFoot"]
    - map: ["enum.HumanoidVisualLayers.RFoot"]
    - map: ["enum.HumanoidVisualLayers.LHand"]
    - map: ["enum.HumanoidVisualLayers.RHand"]
    - map: [ "gloves" ]
    - map: [ "shoes" ]
    - map: [ "ears" ]
    - map: [ "eyes" ]
    - map: [ "belt" ]
    - map: [ "id" ]
    - map: [ "outerClothing" ]
    - map: [ "back" ]
    - map: [ "neck" ]
    - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
    - map: [ "enum.HumanoidVisualLayers.Hair" ]
    - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
    - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
    - map: [ "enum.HumanoidVisualLayers.Tail" ]
    - map: [ "mask" ]
    - map: [ "head" ]
    - map: [ "pocket1" ]
    - map: [ "pocket2" ]
    - map: ["enum.HumanoidVisualLayers.Handcuffs"]
      color: "#ffffff"
      sprite: Objects/Misc/handcuffs.rsi
      state: body-overlay-2
      visible: false
    - map: [ "clownedon" ] # Dynamically generated
      sprite: "Effects/creampie.rsi"
      state: "creampie_human"
      visible: false
  - type: DamageVisuals
    thresholds: [ 10, 20, 30, 50, 70, 100 ]
    targetLayers:
    - "enum.HumanoidVisualLayers.Chest"
    - "enum.HumanoidVisualLayers.Head"
    - "enum.HumanoidVisualLayers.LArm"
    - "enum.HumanoidVisualLayers.LLeg"
    - "enum.HumanoidVisualLayers.RArm"
    - "enum.HumanoidVisualLayers.RLeg"
    damageOverlayGroups:
      Brute:
        sprite: Mobs/Effects/brute_damage.rsi
        color: "#FF0000"
      Burn:
        sprite: Mobs/Effects/burn_damage.rsi
  - type: GenericVisualizer
    visuals:
      enum.CreamPiedVisuals.Creamed:
        clownedon: # Not 'creampied' bc I can already see Skyrat complaining about conflicts.
          True: {visible: true}
          False: {visible: false}
  - type: StatusIcon
    bounds: -0.5,-0.5,0.5,0.5
  - type: RotationVisuals
    defaultRotation: 90
    horizontalRotation: 90
  - type: HumanoidAppearance
    species: Human
  - type: SlowOnDamage
    speedModifierThresholds:
      60: 0.7
      80: 0.5
  - type: Fixtures
    fixtures: # TODO: This needs a second fixture just for mob collisions.
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 185
        restitution: 0.0
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: FloorOcclusion
  - type: RangedDamageSound
    soundGroups:
      Brute:
        collection:
          MeatBulletImpact
    soundTypes:
      Heat:
        collection:
          MeatLaserImpact
  - type: Reactive
    groups:
      Flammable: [ Touch ]
      Extinguish: [ Touch ]
      Acidic: [Touch, Ingestion]
    reactions:
    - reagents: [Water, SpaceCleaner]
      methods: [Touch]
      effects:
      - !type:WashCreamPieReaction
  - type: StatusEffects
    allowed:
    - Stun
    - KnockedDown
    - SlowedDown
    - Stutter
    - SeeingRainbows
    - Electrocution
    - Drunk
    - SlurredSpeech
    - RatvarianLanguage
    - PressureImmunity
    - Muted
    - ForcedSleep
    - TemporaryBlindness
    - Pacified
    - StaminaModifier
    - Flashed
    - RadiationProtection
    - Drowsiness
    - Adrenaline
    - Feminized # DeltaV - Hormone system
    - Masculinized # DeltaV - Hormone system
    - GrayLanguage # imp
    - RelentlessPositivity # imp
  - type: Body
    prototype: Human
    requiredLegs: 2
  - type: Identity
  - type: IdExaminable
  - type: Hands
  - type: ComplexInteraction
  - type: Internals
  - type: FloatingVisuals
  - type: Climbing
  - type: Cuffable
  - type: Ensnareable
    sprite: Objects/Misc/ensnare.rsi
    state: icon
  - type: AnimationPlayer
  - type: Buckle
  - type: CombatMode
    canDisarm: true
  - type: MeleeWeapon
    soundHit:
      collection: Punch
    angle: 30
    animation: WeaponArcFist
    attackRate: 1
    damage:
      types:
        Blunt: 5
  - type: SleepEmitSound
  - type: SSDIndicator
  - type: StandingState
  - type: Dna
  - type: MindContainer
    showExamineInfo: true
  - type: CanEnterCryostorage
  - type: InteractionPopup
    successChance: 1
    interactSuccessString: hugging-success-generic
    interactSuccessSound: /Audio/Effects/thudswoosh.ogg
    messagePerceivedByOthers: hugging-success-generic-others
  - type: CanHostGuardian
  - type: NpcFactionMember
    factions:
    - NanoTrasen
  - type: CreamPied
  - type: Stripping
  - type: UserInterface
    interfaces:
      enum.HumanoidMarkingModifierKey.Key:
        type: HumanoidMarkingModifierBoundUserInterface
      enum.StrippingUiKey.Key:
        type: StrippableBoundUserInterface
      enum.StoreUiKey.Key:
        type: StoreBoundUserInterface
      enum.ThavenMoodsUiKey.Key: # impstation edit
        type: ThavenMoodsBoundUserInterface
        requireInputValidation: false
  - type: Puller
  - type: Speech
    speechSounds: Alto
  - type: DamageForceSay
  - type: Emoting
  - type: BodyEmotes
    soundsId: GeneralBodyEmotes
  - type: Grammar
    attributes:
      proper: true
  - type: MobPrice
    price: 1500 # Kidnapping a living person and selling them for cred is a good move.
    deathPenalty: 0.01 # However they really ought to be living and intact, otherwise they're worth 100x less.
  - type: Tag
    tags:
    - CanPilot
    - FootstepSound
    - DoorBumpOpener
    - AnomalyHost
  - type: LayingDown # WD EDIT
  - type: Barotrauma
    damage:
      types:
        Blunt: 0.50 #per second, scales with pressure and other constants.
        Heat: 0.1
  - type: PassiveDamage # Slight passive regen. Assuming one damage type, comes out to about 4 damage a minute.
    allowedStates:
    - Alive
    damageCap: 20
    damage:
      types:
        Heat: -0.07
      groups:
        Brute: -0.07
  - type: Fingerprint
  - type: Blindable
  # Other
  - type: Temperature
    heatDamageThreshold: 325
    coldDamageThreshold: 260
    currentTemperature: 310.15
    specificHeat: 42
    coldDamage:
      types:
        Cold: 0.1 #per second, scales with temperature & other constants
    heatDamage:
      types:
        Heat: 1.5 #per second, scales with temperature & other constants
  - type: TemperatureSpeed
    thresholds:
      293: 0.8
      280: 0.6
      260: 0.4
  - type: ThermalRegulator
    metabolismHeat: 800
    radiatedHeat: 100
    implicitHeatRegulation: 500
    sweatHeatRegulation: 2000
    shiveringHeatRegulation: 2000
    normalBodyTemperature: 310.15
    thermalRegulationTemperatureThreshold: 25
  - type: Perishable
  - type: Butcherable
    butcheringType: Spike # TODO human.
    spawned:
      - id: FoodMeat
        amount: 5
  - type: Respirator
    damage:
      types:
        Asphyxiation: 1.0
    damageRecovery:
      types:
        Asphyxiation: -1.0
  - type: FireVisuals
    alternateState: Standing

# Mindless Clones
- type: entity
  id: BaseMindlessClone
  parent: BaseMobMindlessClone
  name: mindless clone
  suffix: No AI
  categories: [ DoNotMap ]
  components:
  - type: MindlessClone
  - type: MindContainer
    showExamineInfo: false # have to make sure they're not all catatonic
  - type: ActiveListener
    range: 6
  - type: ParrotSpeech
    maximumPhraseLength: 1000 # will repeat anything, even long sentences.
    minimumWait: 10
    maximumWait: 120 # between 10 seconds and 2 minutes.
    learnChance: 1 # will repeat *anything* it hears.
    hideMessagesInChat: false
    requiresMind: false
    blacklist:
      components:
      - ParrotSpeech # if you get a bunch of these guys, you don't want them copying each other infinitely.

- type: entity
  id: MobMindlessClone
  parent: BaseMindlessClone
  name: mindless clone
  suffix: Passive 
  categories: [ DoNotMap ]
  components:
  - type: MindlessClone
    speakOnSpawn: true
  - type: HTN
    rootTask:
      task: MindlessClonePassiveCompound
  - type: NPCImprintingOnSpawnBehaviour
    spawnFriendsSearchRadius: 5
    whitelist:
      components:
      - HumanoidAppearance

- type: entity
  id: MobMindlessCloneHostile
  parent: BaseMindlessClone
  name: mindless clone
  suffix: Hostile 
  categories: [ DoNotMap ]
  components:
  - type: MindlessClone
    speakOnSpawn: true
    phrasesToPick: MindlessCloneHostile
  - type: HTN
    rootTask:
      task: MindlessCloneHostileCompound
  - type: NpcFactionMember
    factions:
      - SimpleHostile

- type: entity
  id: MobMindlessCloneMindswapHostile
  parent: BaseMindlessClone
  name: mindless clone
  suffix: Mind-swap
  categories: [ DoNotMap ]
  components: 
  - type: MindlessClone
    speakOnSpawn: true
    phrasesToPick: MindlessCloneSinister
    mindSwap: true
    componentsToSwap:
    - ActiveListener
    - ParrotSpeech
    - HTN
    - NpcFactionMember
    - MindContainer
  - type: HTN
    rootTask:
      task: MindlessCloneHostileMindswapCompound
  - type: NpcFactionMember
    factions:
      - SimpleHostile

# Spawner stuff

# this spawner isn't actually used for anything in game, it's just a fun little toy for admins to initiate chaos with
- type: entity
  parent: MarkerBase
  id: RandomMindlessCloneSpawner
  name: random mindless clone spawner
  suffix: DO NOT MAP
  categories: [ DoNotMap ]
  placement:
    mode: PlaceFree
  components:
  - type: Sprite
    layers:
    - state: red
  - type: EntityTableSpawner
    table: !type:NestedSelector
      tableId: RandomMindlessCloneTable

- type: entityTable
  id: RandomMindlessCloneTable
  table: !type:GroupSelector
    children:
    - !type:GroupSelector
      weight: 61 # ~2 in 3 chance for a passive clone
      children:
      - id: MobMindlessClone
    - !type:GroupSelector
      weight: 30 # ~1 in 3 chance for a hostile clone
      children:
      - id: MobMindlessCloneHostile
    - !type:GroupSelector
      weight: 5 # ~1 in 20 chance for a mindswap clone
      children:
      - id: MobMindlessCloneMindswapHostile

# HTN compounds (for AI)

- type: htnCompound
  id: MindlessCloneHostileCompound
  branches:
    - preconditions:
      - !type:KeyNotExistsPrecondition
        key: Handled
      tasks:
        - !type:HTNPrimitiveTask
          operator: !type:SetFloatOperator
            targetKey: IdleTime
            amount: 21

        - !type:HTNCompoundTask
          task: IdleCompound
        
        - !type:HTNPrimitiveTask
          operator: !type:SetBoolOperator
            targetKey: Handled
            value: true
    - tasks: 
        - !type:HTNCompoundTask
          task: SimpleHostileCompound

- type: htnCompound
  id: MindlessCloneHostileMindswapCompound # same as the other hostile one, but shorter cooldown.
  branches:
    - preconditions:
      - !type:KeyNotExistsPrecondition
        key: Handled
      tasks:
        - !type:HTNPrimitiveTask
          operator: !type:SetFloatOperator
            targetKey: IdleTime
            amount: 7

        - !type:HTNCompoundTask
          task: IdleCompound
        
        - !type:HTNPrimitiveTask
          operator: !type:SetBoolOperator
            targetKey: Handled
            value: true
    - tasks: 
        - !type:HTNCompoundTask
          task: SimpleHostileCompound

- type: htnCompound
  id: MindlessClonePassiveCompound
  branches:
    - preconditions:
      - !type:KeyNotExistsPrecondition
        key: Handled
      tasks:
        - !type:HTNPrimitiveTask
          operator: !type:SetFloatOperator
            targetKey: IdleTime
            amount: 21

        - !type:HTNCompoundTask
          task: IdleCompound
        
        - !type:HTNPrimitiveTask
          operator: !type:SetBoolOperator
            targetKey: Handled
            value: true
    - tasks: 
        - !type:HTNCompoundTask
          task: KisserTomatoCompound # idle, but they pick someone to follow around

# CloningSettings

- type: cloningSettings
  id: MindlessClone
  parent: CloningPod
  forceCloning: true
  components:
  - Vocal
  - Speech
  - TypingIndicator # not sure why this doesn't work. Think it has something to do with BeforeShowTypingIndicatorEvent
  - Bloodstream
