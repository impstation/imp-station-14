- type: entity #behold my abombination, mortal
  parent: [BaseMob, StripableInventoryBase]
  id: MobTckut
  name: tck'ut
  description: A droid made the Decapoidian Empire to patrol the halls and tunnels of its fleets.
  components:
  - type: Reactive
    groups:
      Acidic: [Touch]
  - type: DamageOnHighSpeedImpact
    damage:
      types:
        Blunt: 5
    soundHit:
      collection: MetalThud
  - type: FootstepModifier
    footstepSoundCollection:
      path: /Audio/Effects/Footsteps/borgwalk3.ogg
  - type: StaticPrice
    price: 1250
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.25
        density: 100
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: MovementSpeedModifier
    baseWalkSpeed : 2.5
    baseSprintSpeed : 4.5
  - type: Appearance
  - type: Sprite
    sprite: _Impstation/Mobs/Silicon/Bots/tckut.rsi
    layers:
    - state: tckut
      map: ["enum.BorgVisualLayers.Body", "movement"]
    - state: tckut_e_r
      map: ["enum.BorgVisualLayers.Light"]
      visible: false
    - state: light
      shader: unshaded
      map: ["light","enum.BorgVisualLayers.LightStatus"]
      visible: false
  - type: RotationVisuals
    horizontalRotation: 90
  - type: MobState
    allowedStates:
    - Alive
    - Critical
    - Dead
  - type: MobThresholds
    thresholds:
      0: Alive
      100: Critical
      200: Dead
    stateAlertDict:
      Alive: BorgHealth
      Critical: BorgCrit
      Dead: BorgDead
    showOverlays: false
    allowRevives: true
  - type: HealthExaminable
    examinableTypes:
    - Blunt
    - Slash
    - Piercing
    - Heat
    - Shock
    locPrefix: silicon
  - type: UserInterface
    interfaces:
      enum.SiliconLawsUiKey.Key:
        type: SiliconLawBoundUserInterface
      enum.BorgUiKey.Key:
        type: BorgBoundUserInterface
      enum.StrippingUiKey.Key:
        type: StrippableBoundUserInterface
  - type: ActivatableUI
    key: enum.BorgUiKey.Key
  - type: SiliconLawBound
  - type: ActionGrant
    actions:
    - ActionViewLaws
  - type: SiliconLawProvider
    canBeSubverted: false
    laws: Utsimov
  - type: Inventory
    templateId: borg
  - type: Hands
    showInHands: false
    disableExplosionRecursion: true
    canBeStripped: false
  - type: ComplexInteraction
  - type: IntrinsicRadioReceiver
  - type: IntrinsicRadioTransmitter
    channels:
    - Common
    - Binary
  - type: ActiveRadio
    channels:
    - Common
    - Binary
  - type: ZombieImmune
  - type: Repairable
    doAfterDelay: 10
    allowSelfRepair: false
  - type: LockingWhitelist
    blacklist:
      components:
      - BorgChassis
      - RoboticsConsole
  - type: WiresPanel
  - type: ActivatableUIRequiresPanel
  - type: ContainerContainer
    containers:
      cell_slot: !type:ContainerSlot { }
      borg_module: !type:Container { }
      part-container: !type:Container
  - type: PowerCellSlot
    cellSlotId: cell_slot
    fitsInCharger: true
  - type: ItemToggle
    onActivate: false # You should not be able to turn off a borg temporarily.
    activated: false # gets activated when a mind is added
    onUse: false # no item-borg toggling sorry
  - type: PowerCellDraw
    drawRate: 0 #if it doesnt have power nothing works so I just made it 0 drain instead of cutting power entirely
  # no ToggleCellDraw since dont want to lose access when power is gone
  - type: Body
  - type: TypingIndicator
    proto: robot
  - type: Speech
    speechVerb: Robotic
    speechSounds: Tcktck
  - type: Vocal
    sounds:
      Unsexed: TckTck
  - type: UnblockableSpeech
  - type: ReplacementAccent
    accent: silicon
  - type: Lock
    locked: true
    breakOnAccessBreaker: false
    unlockOnClick: false
  - type: UIRequiresLock
    userInterfaceKeys:
    - enum.BorgUiKey.Key
  - type: LockedWiresPanel
  - type: Damageable
    damageContainer: Silicon
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 75
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          path: /Audio/Machines/warning_buzzer.ogg
          params:
            volume: 5
    - trigger:
        !type:DamageTrigger
        damage: 300
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:EmptyContainersBehaviour
        containers:
        - borg_module
        - cell_slot
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: HandheldLight
    toggleOnInteract: false
    wattage: 0.2
    blinkingBehaviourId: blinking
    radiatingBehaviourId: radiating
  - type: LightBehaviour
    behaviours:
    - !type:FadeBehaviour
      id: radiating
      maxDuration: 2.0
      startValue: 3.0
      endValue: 2.0
      isLooped: true
      reverseWhenFinished: true
    - !type:PulseBehaviour
      id: blinking
      interpolate: Nearest
      maxDuration: 1.0
      startValue: 0.1
      endValue: 2.0
      isLooped: true
  - type: ToggleableVisuals
    spriteLayer: light
  - type: ItemTogglePointLight
  - type: PointLight
    enabled: false
    mask: /Textures/Effects/LightMasks/cone.png
    autoRot: true
    radius: 8
    color: "#ff0043"
    netsync: false
  - type: Pullable
  - type: StandingState
  - type: Tag
    tags:
    - DoorBumpOpener
    - FootstepSound
    - SiliconEmotes
  - type: Emoting
  - type: GuideHelp
    guides:
    - Robotics
  - type: ProtectedFromStepTriggers
  - type: DamageOnInteractProtection
    damageProtection:
      flatReductions:
        Heat: 10 # capable of touching light bulbs and stoves without feeling pain!
        Cold: 10 # for cold lightbulbs
  - type: BorgChassis
    maxModules: 3
    hasMindState: tckut_e
    noMindState: tckut_e_r
    moduleWhitelist:
      tags:
      - BorgModuleGeneric
      - BorgModuleTckut
  - type: ContainerFill
    containers:
      borg_module:
      - BorgModuleTckut
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHyper
      charger_slot:
        ejectOnInteract: true
        whitelist:
          components:
          - PowerCell #just power cells no guns
  - type: GhostRole
    makeSentient: true
    name: Tck'ut
    description: Patrol the halls, approve crew morale, help security, and enforce safety.
    rules: ghost-role-information-silicon-rules
    mindRoles:
    - MindRoleGhostRoleSilicon
  - type: GhostTakeoverAvailable
  - type: GenericVisualizer
    visuals:
      enum.AnchorVisuals.Anchored:
        anchored:
          False: { state: anchored, visible: false }
          True: { state: anchored, visible: true }
  - type: Climbing
  - type: Clumsy
    clumsySound:
      path: /Audio/Effects/metal_thud3.ogg # the game gets really touchy about having that initial forward slash.
    clumsyHypo: false
    clumsyDefib: false
    clumsyGuns: false
  - type: Access
    tags:
    - Maintenance
    - Security
    - Medical
  - type: NpcFactionMember
    factions:
    - SimpleNeutral
  - type: Carriable
  - type: CanEscapeInventory #for carrying
