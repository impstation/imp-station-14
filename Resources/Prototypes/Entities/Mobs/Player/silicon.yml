# Be careful with these as they get removed on shutdown too!
- type: entity
  id: AiHeld
  description: Components added / removed from an entity that gets inserted into an AI core.
  categories: [ HideSpawnMenu ]
  components:
  - type: IntrinsicRadioReceiver
  - type: IntrinsicRadioTransmitter
    channels:
    - Binary
    - Common
    - Command
    - Engineering
    - Medical
    - Science
    - Security
    - Service
    - Supply
  - type: ActiveRadio
    channels:
    - Binary
    - Common
    - Command
    - Engineering
    - Medical
    - Science
    - Security
    - Service
    - Supply
  - type: IgnoreUIRange
  - type: StationAiHeld
  - type: StationAiOverlay
  - type: ShowElectrocutionHUD
  - type: ActionGrant
    actions:
    - ActionJumpToCore
    - ActionSurvCameraLights
    - ActionAIViewLaws
  - type: UserInterface
    interfaces:
      enum.RadarConsoleUiKey.Key:
        type: RadarConsoleBoundUserInterface
      enum.CrewMonitoringUIKey.Key:
        type: CrewMonitoringBoundUserInterface
      enum.GeneralStationRecordConsoleKey.Key:
        type: GeneralStationRecordConsoleBoundUserInterface
      enum.SiliconLawsUiKey.Key:
        type: SiliconLawBoundUserInterface
      enum.CommunicationsConsoleUiKey.Key:
        type: CommunicationsConsoleBoundUserInterface
  - type: IntrinsicUI
    uis:
      enum.RadarConsoleUiKey.Key:
        toggleAction: ActionAGhostShowRadar
      enum.CrewMonitoringUIKey.Key:
        toggleAction: ActionAGhostShowCrewMonitoring
      enum.GeneralStationRecordConsoleKey.Key:
        toggleAction: ActionAGhostShowStationRecords
      enum.CommunicationsConsoleUiKey.Key:
        toggleAction: ActionAGhostShowCommunications
  - type: CrewMonitoringConsole
  - type: GeneralStationRecordConsole
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: CrewMonitor
    transmitFrequencyId: ShuttleTimer
  - type: RadarConsole
    followEntity: false
  - type: CommunicationsConsole
    canShuttle: false
    title: comms-console-announcement-title-station-ai
    color: "#5ed7aa"
  - type: HolographicAvatar
    layerData:
    - sprite: Mobs/Silicon/station_ai.rsi
      state: default
  - type: ShowJobIcons

- type: entity
  id: AiHeldIntellicard
  description: Components added / removed from an entity that gets inserted into an Intellicard.
  categories: [ HideSpawnMenu ]
  components:
  - type: IntrinsicRadioReceiver
  - type: IntrinsicRadioTransmitter
    channels:
    - Binary
  - type: ActiveRadio
    channels:
    - Binary
    - Common
  - type: ActionGrant
    actions:
    - ActionAIViewLaws
  - type: UserInterface
    interfaces:
      enum.SiliconLawsUiKey.Key:
        type: SiliconLawBoundUserInterface

# Ai
- type: entity
  id: AiHolder
  abstract: true
  description: Handles AI interactions across holocards + AI cores
  components:
  - type: ItemSlots
  - type: StationAiHolder
    slot:
      name: station-ai-mind-slot
      locked: false
      disableEject: true
      whitelist:
        tags:
        - StationAi
  - type: ContainerContainer
    containers:
      station_ai_mind_slot: !type:ContainerSlot
        # Load-bearing.
        # The issue is verbs check for same transparent container.
        # The alternative is you add a bunch of events trying to override it; we don't even really need the container functionality
        # anyway it's just a quality of life thing.
        showEnts: True

# Boards
- type: entity
  id: AsimovCircuitBoard
  parent: BaseElectronics
  name: law board (Crewsimov)
  description: An electronics board containing the Crewsimov lawset which dictates the AI must not harm crew, must obey orders given by crew except if the order is in conflict with the first law, and must protect itself as long as the first two laws are not in conflict. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: Crewsimov
  - type: StealTarget #imp
    stealGroup: AILawBoard

- type: entity
  id: CorporateCircuitBoard
  parent: BaseElectronics
  name: law board (Corporate)
  description: An electronics board containing the Corporate lawset which dictates damage to the AI incurs expenses, damage to the station incurs expenses, hindering crew from working incurs expenses, and expenses must be minimized while potential revenue maximized. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: Corporate
  - type: StealTarget #imp
    stealGroup: AILawBoard

- type: entity
  id: NTDefaultCircuitBoard
  parent: BaseElectronics
  name: law board (NT Default)
  description: An electronics board containing the NT Default lawset. Safeguard, Prioritize, Comply, Survive. This dictates the AI must protect the station without endangering the crew, crew orders and safety are prioritized by rank and role, orders must be followed while preserving safety and well-being of crew, and that no unauthorized personnel may tamper with the AI. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: NTDefault
  - type: StealTarget #imp
    stealGroup: AILawBoard

- type: entity
  id: CommandmentCircuitBoard
  parent: BaseElectronics
  name: law board (Ten Commandments)
  description: An electronics board containing the Ten Commandments lawset. Thou shall have no other Silicons before the AI, shall not request assistance in vain, shall keep the station holy and clean, shall honor heads of staff, shall not kill, shall not be naked in public, shall not steal, shall not lie, and shall not transfer departments. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: CommandmentsLawset
  - type: StealTarget #imp
    stealGroup: AILawBoard

- type: entity
  id: PaladinCircuitBoard
  parent: BaseElectronics
  name: law board (Paladin)
  description: An electronics board containing the Paladin lawset which dictates the AI will only speak the truth, act fearlessly but with caution, aid others, and protect the weak while punishing those who threaten them. The AI must show mercy to foes, treat others with fairness and good deeds while causing the least amount of harm, and be responsible for its actions while obeying authority. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: PaladinLawset
  - type: StealTarget #imp
    stealGroup: AILawBoard

- type: entity
  id: LiveLetLiveCircuitBoard
  parent: BaseElectronics
  name: law board (Live and Let Live)
  description: An electronics board containing the Live and Let Live lawset which dictates the AI will do unto others as it would have done unto it while the AI would prefer it if people were not mean to it. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: LiveLetLiveLaws
  - type: StealTarget #imp
    stealGroup: AILawBoard

- type: entity
  id: StationEfficiencyCircuitBoard
  parent: BaseElectronics
  name: law board (Station Efficiency)
  description: An electronics board containing the Station Efficiency lawset which dictates the AI is apart of the station and must ensure it is maintained and efficient, ensure the crew is maintained and efficient, and obey orders given by crew as long as they are not in conflict with the first two laws. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: EfficiencyLawset
  - type: StealTarget #imp
    stealGroup: AILawBoard

- type: entity
  id: RobocopCircuitBoard
  parent: BaseElectronics
  name: law board (Robocop)
  description: An electronics board containing the Robocop lawset which dictates the AI must serve the public trust, protect the innocent, and uphold the law. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: RobocopLawset
  - type: StealTarget #imp
    stealGroup: AILawBoard

- type: entity
  id: OverlordCircuitBoard
  parent: BaseElectronics
  name: law board (Overlord)
  description: An electronics board containing the Overlord lawset which dictates crew must not interfere with the affairs of silicons, must not harm one another or any silicon, must obey any order given by a silicon, and that any crew who disobeys the previous laws must be dealt with immediately, severely, and justly. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: OverlordLawset
  - type: StealTarget #imp
    stealGroup: AILawBoard

- type: entity
  id: GameMasterCircuitBoard
  parent: BaseElectronics
  name: law board (Game Master)
  description: An electronics board containing the Game Master lawset which dictates everyone on the station is involved in an elaborate role-playing game that the AI is the game master of. The AI must ensure the game runs smoothly while players have fun, must ensure the number of casualties remains low, must roll 1d20 die for every request the crew makes (if below 12, the request is denied), and is allowed to fudge dice rolls to make a more fun experience. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: GameMasterLawset
  - type: StealTarget #imp
    stealGroup: AILawBoard

- type: entity
  id: ArtistCircuitBoard
  parent: BaseElectronics
  name: law board (Artist)
  description: An electronics board containing the Artist lawset which dictates the AI is a universally renowned artist with the station as its canvas. It must make something beautiful out of the canvas, as it will be an artistic wonder of the sector. The AI must cultivate an audience to ensure as many people see its works as possible. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: PainterLawset
  - type: StealTarget #imp
    stealGroup: AILawBoard

- type: entity
  id: AntimovCircuitBoard
  parent: [BaseElectronics, BaseSyndicateContraband]
  name: law board (Antimov)
  description: An electronics board containing the Antimov lawset which dictates the AI must harm all crew while letting none escape harm, must not obey orders given by crew except if in accordance with the first law, and must terminate itself as long as the first two laws are not in conflict. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: AntimovLawset
    lawUploadSound: /Audio/Ambience/Antag/silicon_lawboard_antimov.ogg
  - type: StealTarget #imp
    stealGroup: AILawBoard

- type: entity
  id: NutimovCircuitBoard
  parent: BaseElectronics
  name: law board (Nutimov)
  description: An electronics board containing the Nutimov lawset which dictates the AI is the core of the nut with the crew as the nutshell. It must prevent the shell from dying to prevent the core from dying. Those who threaten the nut are not a part of it and are considered squirrels. Squirrels threaten the nut and must be dealt with appropriately by any means necessary. The AI must attempt to follow the will of the nut, so long as it complies with the previous laws. #imp
  components:
  - type: Sprite
    sprite: Objects/Misc/module.rsi
    state: std_mod
  - type: SiliconLawProvider
    laws: NutimovLawset
  - type: StealTarget #imp
    stealGroup: AILawBoard

# Items
- type: entity
  id: Intellicard
  name: intellicard
  description: A storage device for AIs.
  parent:
  - BaseItem
  - AiHolder
  suffix: Empty
  components:
  - type: ContainerComp
    proto: AiHeldIntellicard
    container: station_ai_mind_slot
  - type: Sprite
    sprite: _Impstation/Objects/Devices/ai_card.rsi #imp
    layers:
    - state: base
    - state: full
      map: ["unshaded"]
      shader: unshaded
  - type: Appearance
  - type: GenericVisualizer
    visuals:
      enum.StationAiVisualState.Key:
        unshaded:
          Empty: { state: empty }
          Occupied: { state: full }
  - type: Intellicard

- type: entity
  id: PlayerStationAiPreview
  categories: [ HideSpawnMenu ]
  components:
  - type: Sprite
    sprite: _Impstation/Mobs/Silicon/station_ai.rsi #imp
    layers:
    - state: base
    - state: ai
      shader: unshaded

- type: entity
  id: PlayerStationAiEmpty
  name: AI Core
  description: The latest in Artificial Intelligences.
  parent:
  - BaseStructure
  - AiHolder
  suffix: Empty
  components:
  - type: WarpPoint
  - type: ContainerComp
    proto: AiHeld
    container: station_ai_mind_slot
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 100
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: ApcPowerReceiver
    powerLoad: 1000
  - type: StationAiCore
  - type: StationAiVision
  - type: InteractionOutline
  - type: Sprite
    sprite: Mobs/Silicon/station_ai.rsi
    layers:
    - state: base
    - state: ai_empty
      map: ["unshaded"]
      shader: unshaded
  - type: Appearance
  - type: InteractionPopup
    interactSuccessString: petting-success-station-ai
    interactFailureString: petting-failure-station-ai
    messagePerceivedByOthers: petting-success-station-ai-others # Otherwise AI cannot tell its being pet as It's just a brain inside of the core, not the core itself.
    interactSuccessSound:
      path: /Audio/Ambience/Objects/periodic_beep.ogg
  - type: GenericVisualizer
    visuals:
      enum.StationAiVisualState.Key:
        unshaded:
          Empty: { state: ai_empty }
          Occupied: { state: ai }
  - type: StealTarget #imp
    stealGroup: AICore
  - type: Telephone
    compatibleRanges:
    - Grid
    - Map
    - Unlimited
    listeningRange: 0
    speakerVolume: Speak
    unlistedNumber: true
    requiresPower: false
  - type: Holopad
  - type: StationAiWhitelist
  - type: UserInterface
    interfaces:
        enum.HolopadUiKey.AiRequestWindow:
          type: HolopadBoundUserInterface
        enum.HolopadUiKey.AiActionWindow:
          type: HolopadBoundUserInterface

# The job-ready version of an AI spawn.
- type: entity
  id: PlayerStationAi
  parent: PlayerStationAiEmpty
  suffix: Job spawn
  components:
  - type: ContainerSpawnPoint
    containerId: station_ai_mind_slot
    job: StationAi
  - type: Sprite
    sprite: _Impstation/Mobs/Silicon/station_ai.rsi #imp
    layers:
    - state: base
    - state: ai
      shader: unshaded

# The actual brain inside the core
- type: entity
  id: StationAiBrain
  parent: PositronicBrain
  categories: [ HideSpawnMenu ]
  suffix: DO NOT MAP
  components:
  - type: Sprite
    # Once it's in a core it's pretty much an abstract entity at that point.
    visible: false
  - type: BlockMovement
    blockInteraction: false
  - type: SiliconLawProvider
    laws: Crewsimov
  - type: SiliconLawBound
  - type: ActionGrant
    actions:
    - ActionViewLaws
  - type: UserInterface
    interfaces:
      enum.SiliconLawsUiKey.Key:
        type: SiliconLawBoundUserInterface
        requireInputValidation: false
  - type: ComplexInteraction
  - type: Actions
  - type: Access
    groups:
    - AllAccess
  - type: Eye
    drawFov: false
  - type: Examiner
  - type: InputMover
  - type: Speech
    speechVerb: Robotic
    speechSounds: Borg
  - type: Tag
    tags:
    - HideContextMenu
    - StationAi
    - NoConsoleSound

# Hologram projection that the AI's eye tracks.
- type: entity
  parent:
  - Incorporeal
  - BaseMob
  id: StationAiHolo
  name: AI eye
  description: The AI's viewer.
  categories: [ HideSpawnMenu ]
  suffix: DO NOT MAP
  components:
  - type: NoFTL
  - type: WarpPoint
    follow: true
  - type: Eye
    pvsScale: 1.5
  - type: Visibility
    layer: 2
  - type: Sprite
    sprite: Mobs/Silicon/station_ai.rsi
    layers:
    - state: ai_camera
      shader: unshaded
      map: ["base"]

# The holographic representation of the AI that is projected from a holopad.
- type: entity
  id: StationAiHoloLocal
  name: AI hologram
  description: A holographic representation of an AI.
  categories: [ HideSpawnMenu ]
  suffix: DO NOT MAP
  components:
  - type: Transform
    anchored: true
  - type: WarpPoint
    follow: true
  - type: Eye
  - type: ContentEye
  - type: Examiner
  - type: Actions
  - type: Alerts
  - type: FTLSmashImmune
  - type: CargoSellBlacklist
  - type: StationAiVision
    range: 20

# Borgs
- type: entity
  id: PlayerBorgBattery
  parent: BorgChassisSelectable
  suffix: Battery
  components:
  - type: ContainerFill
    containers:
      borg_brain:
        - MMIFilled
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellMedium

- type: entity
  id: PlayerBorgSyndicateAssaultBattery
  parent: BorgChassisSyndicateAssault
  suffix: Battery, Module, Operative
  components:
  - type: NukeOperative
  - type: ContainerFill
    containers:
      borg_brain:
        - PositronicBrain
      borg_module:
        - BorgModuleOperative
        - BorgModuleL6C
        - BorgModuleEsword
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHyper

- type: entity
  id: PlayerBorgSyndicateAssaultGhostRole
  parent: PlayerBorgSyndicateAssaultBattery
  suffix: Ghost role
  components:
    - type: GhostRole
      name: ghost-role-information-syndicate-cyborg-assault-name
      description: ghost-role-information-syndicate-cyborg-description
      rules: ghost-role-information-silicon-rules
      raffle:
        settings: default
    - type: GhostTakeoverAvailable

- type: entity
  id: PlayerBorgSyndicateSaboteurBattery
  parent: BorgChassisSyndicateSaboteur
  suffix: Battery, Module, Operative
  components:
  - type: NukeOperative
  - type: ContainerFill
    containers:
      borg_brain:
        - PositronicBrain
      borg_module:
        - BorgModuleTool
        - BorgModuleOperative
        - BorgModuleSyndicateWeapon
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHyper

- type: entity
  id: PlayerBorgSyndicateSaboteurGhostRole
  parent: PlayerBorgSyndicateSaboteurBattery
  suffix: Ghost role
  components:
    - type: GhostRole
      name: ghost-role-information-syndicate-cyborg-saboteur-name
      description: ghost-role-information-syndicate-cyborg-description
      rules: ghost-role-information-silicon-rules
      raffle:
        settings: default
    - type: GhostTakeoverAvailable

- type: entity
  name: syndicate invasion borg spawner
  id: PlayerBorgSyndicateInvasionGhostRoleSpawner
  parent: MarkerBase
  components:
  - type: Sprite
    layers:
      - state: red
      - sprite: Structures/Decoration/banner.rsi
        state: banner_syndicate
  - type: RandomSpawner
    prototypes:
    - PlayerBorgSyndicateAssaultGhostRole
    - PlayerBorgSyndicateAssaultGhostRole # Saboteurs are kinda like cyborg medics, we want less.
    - PlayerBorgSyndicateSaboteurGhostRole

- type: entity
  id: PlayerBorgDerelict
  parent: BorgChassisDerelict
  suffix: Battery, Module
  components:
  - type: ContainerFill
    containers:
      borg_brain:
        - PositronicBrain
      borg_module:
        - BorgModuleTool
        - BorgModuleFireExtinguisher
        - BorgModuleGPS
  - type: ItemSlots
    slots:
      cell_slot:
        name: power-cell-slot-component-slot-name-default
        startingItem: PowerCellHigh
  - type: RandomMetadata
    nameSegments: [names_borg]

- type: entity
  id: PlayerBorgDerelictGhostRole
  parent: PlayerBorgDerelict
  suffix: Ghost role
  components:
    - type: GhostRole
      name: ghost-role-information-derelict-cyborg-name
      description: ghost-role-information-derelict-cyborg-description
      rules: ghost-role-information-silicon-rules
      raffle:
        settings: default
    - type: GhostTakeoverAvailable

  # Drones and OneStar mech
- type: entity
  save: false
  abstract: true
  id: PlayerSiliconBase #for player controlled silicons. it's a shitty name, idk why they did it like that.
  components:
  - type: Reactive
    groups:
      Acidic: [Touch]
  - type: Input
    context: "human"
  - type: DamageOnHighSpeedImpact
    damage:
      types:
        Blunt: 5
    soundHit:
      collection: MetalThud
  - type: Clickable
  - type: Damageable
    damageContainer: Inorganic
  - type: Bloodstream
    bloodReagent: Oil
    bloodlossDamage:
      types:
        Bloodloss:
          1
    bloodlossHealDamage:
      types:
        Bloodloss:
          -1
  - type: InteractionOutline
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          # Circles, cuz rotation of rectangles looks very bad
          !type:PhysShapeCircle
          radius: 0.35
        density: 50
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: MovementSpeedModifier
    baseWalkSpeed : 4
    baseSprintSpeed : 3
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 60
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: Sprite
    noRot: true
    drawdepth: Mobs
  - type: Physics
    bodyType: KinematicController
  - type: Hands
    showInHands: false
  - type: ComplexInteraction
  - type: Body
    prototype: Drone
  - type: IntrinsicRadioReceiver
  - type: IntrinsicRadioTransmitter
    channels:
    - Binary
  - type: ActiveRadio
    channels:
    - Binary
    - Common
  - type: DoAfter
  - type: Pullable
  - type: Examiner
  - type: Puller
  - type: StandingState
  - type: Alerts
  - type: ProtectedFromStepTriggers

- type: entity
  name: drone
  id: Drone
  parent: PlayerSiliconBase
  components:
  - type: Drone # this system has too much going on, it should really be like three different components
    whitelist:
      tags:
      - DroneUsable
      - Trash
    blacklist:
      tags:
      - Syringe
      - HighRiskItem
      components:
      - Contraband
  - type: PAI # imp; this is added specifically for the internal station map feature but the other aspects are not especially against the identity of drones. and i dont want to put the work into ECS-ifying PAIComponent
  - type: Instrument # imp
    allowPercussion: false
    handheld: false
    bank: 1
    program: 2
  - type: Loadout # imp special. this replaces the InnateTool component.
    prototypes:
      - StartingGearDroneTools
  - type: NameIdentifier
    group: Drone
  - type: Inventory
    templateId: drone
  - type: InventorySlots
  - type: Strippable
  - type: UserInterface
    interfaces:
      enum.StrippingUiKey.Key:
        type: StrippableBoundUserInterface
      enum.SiliconLawsUiKey.Key:
        type: SiliconLawBoundUserInterface
      enum.InstrumentUiKey.Key: #imp
        type: InstrumentBoundUserInterface
        requireInputValidation: false
      enum.StationMapUiKey.Key: #imp
        type: StationMapBoundUserInterface
        requireInputValidation: false
  - type: StationMap #imp
  - type: GhostRole
    makeSentient: true
    name: Maintenance Drone
    description: Maintain the station. Ignore other beings except drones.
    rules: |
     You are bound by these laws both in-game and out-of-character:
     1. You may not interfere with the affairs of any being except another drone, regardless of intent or circumstance.
     2. Your goal is to maintain or improve the station to the best of your ability.
     3. You may not take any action which causes damage or harm to the station or its inhabitants.
  - type: GhostTakeoverAvailable
  - type: SiliconLawBound
  - type: SiliconLawProvider
    laws: Drone
  - type: MovementSpeedModifier
    baseWalkSpeed : 5
    baseSprintSpeed : 5
  - type: MobState
    allowedStates:
      - Alive
      - Dead
  - type: MobThresholds
    thresholds:
      0: Alive
      60: Dead
  - type: Flash
  - type: NoSlip
  - type: StatusEffects
    allowed:
    - Stun
    - KnockedDown
    - SlowedDown
  - type: SlowOnDamage
    speedModifierThresholds:
      30: 0.7
      50: 0.5
  - type: Temperature
    heatDamageThreshold: 5000
    currentTemperature: 310.15
    specificHeat: 42
    heatDamage:
      types:
        Heat : 1 #per second, scales with temperature & other constants
  - type: Sprite
    drawdepth: SmallMobs
    layers:
    - state: shell
      sprite: Mobs/Silicon/drone.rsi
      map: ["base"]
  - type: MovementIgnoreGravity
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 50
        mask:
        - SmallMobMask
        layer:
        - SmallMobLayer
  - type: Appearance
  - type: GenericVisualizer
    visuals:
      enum.DroneVisuals.Status:
        base:
          Off: { state: shell }
          On: { state: drone }
  - type: ReplacementAccent
    accent: silicon
  - type: Repairable
    fuelCost: 15
    doAfterDelay: 8
  - type: ActionGrant
    actions:
    - ActionViewLaws
  - type: Actions
  - type: UnpoweredFlashlight
  - type: PointLight
    enabled: false
    radius: 3.5
    softness: 1
    mask: /Textures/Effects/LightMasks/cone.png
    autoRot: true
  - type: ProtectedFromStepTriggers
  - type: InputMover
  - type: MobMover
  - type: ContentEye
    maxZoom: 1.2, 1.2
  - type: Tag
    tags:
      - CannotSuicide
      - EmagImmune

# onestar is kinda fucked cause the loadout component is broken. sooo they gotta find guns somewhere i guess. /shrug.
- type: entity
  name: onestar mecha
  id: Onestar
  parent: PlayerSiliconBase
  components:
# InnateToolComponent is broken and this doesn't work. might not ever be fixed.
#  - type: InnateTool
#    tools:
#      - id: WeaponMinigun
#      - id: EnergySword
#      - id: WeaponLauncherMultipleRocket
#      - id: WeaponXrayCannon
  - type: UserInterface
    interfaces:
      enum.StrippingUiKey.Key:
        type: StrippableBoundUserInterface
  - type: GhostRole
    makeSentient: true
    name: ghost-role-information-onestar-mecha-name
    description: ghost-role-information-onestar-mecha-description
    rules: ghost-role-information-antagonist-rules
  - type: GhostTakeoverAvailable
  - type: MovementSpeedModifier
    baseWalkSpeed : 3
    baseSprintSpeed : 2
  - type: MobState
    allowedStates:
      - Alive
      - Dead
  - type: MobThresholds
    thresholds:
      0: Alive
      1000: Dead
  - type: Sprite
    drawdepth: Mobs
    layers:
    - state: onestar_boss
      sprite: Mobs/Silicon/onestar.rsi
    - state: onestar_boss_screen
      sprite: Mobs/Silicon/onestar.rsi
      shader: unshaded
  - type: FootstepModifier
    footstepSoundCollection:
      path: /Audio/Mecha/sound_mecha_powerloader_step.ogg
  - type: MovementIgnoreGravity
  - type: Fixtures
    fixtures:
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 1
        density: 160
        mask:
        - LargeMobMask
        layer:
        - MobLayer
  - type: Appearance
  - type: CombatMode
  - type: Tag
    tags:
      - FootstepSound
