- type: entity
  save: false
  parent:
  - BaseMob
  # - MobDamageable # Offbrand - we don't want thresholds
  - MobPolymorphable
  - MobCombat
  - StripableInventoryBase
  id: BaseMobSpecies
  abstract: true
  components:
  - type: Sprite
    layers:
    - map: [ "enum.HumanoidVisualLayers.TailUnderlay" ] # imp
    - map: [ "enum.HumanoidVisualLayers.TailBehind" ] # Floof
    - map: [ "enum.HumanoidVisualLayers.Chest" ]
    - map: [ "enum.HumanoidVisualLayers.Head" ]
    - map: [ "enum.HumanoidVisualLayers.Snout" ]
    - map: [ "enum.HumanoidVisualLayers.Eyes" ]
    - map: [ "enum.HumanoidVisualLayers.RArm" ]
    - map: [ "enum.HumanoidVisualLayers.LArm" ]
    - map: [ "enum.HumanoidVisualLayers.RLeg" ]
    - map: [ "enum.HumanoidVisualLayers.LLeg" ]
    - map: [ "enum.HumanoidVisualLayers.UndergarmentBottom" ]
    - map: [ "enum.HumanoidVisualLayers.UndergarmentTop" ]
    - map: ["jumpsuit"]
    - map: ["enum.HumanoidVisualLayers.LFoot"]
    - map: ["enum.HumanoidVisualLayers.RFoot"]
    - map: ["enum.HumanoidVisualLayers.LHand"]
    - map: ["enum.HumanoidVisualLayers.RHand"]
    - map: [ "gloves" ]
    - map: [ "shoes" ]
    - map: [ "ears" ]
    - map: [ "eyes" ]
    - map: [ "belt" ]
    - map: [ "id" ]
    - map: [ "outerClothing" ]
    - map: [ "enum.HumanoidVisualLayers.TailBehindBackpack" ] # imp
    - map: [ "back" ]
    - map: [ "enum.HumanoidVisualLayers.TailOversuit" ] # Floof
    - map: [ "neck" ]
    - map: [ "enum.HumanoidVisualLayers.SnoutCover" ]
    - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
    - map: [ "enum.HumanoidVisualLayers.Hair" ]
    - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
    - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
    - map: [ "enum.HumanoidVisualLayers.Tail" ]
    - map: [ "mask" ]
    - map: [ "head" ]
    - map: [ "pocket1" ]
    - map: [ "pocket2" ]
    - map: ["enum.HumanoidVisualLayers.Handcuffs"]
      color: "#ffffff"
      sprite: Objects/Misc/handcuffs.rsi
      state: body-overlay-2
      visible: false
    - map: [ "clownedon" ] # Dynamically generated
      sprite: "Effects/creampie.rsi"
      state: "creampie_human"
      visible: false
  - type: DamageVisuals
    thresholds: [ 10, 20, 30, 50, 70, 100 ]
    targetLayers:
    - "enum.HumanoidVisualLayers.Chest"
    - "enum.HumanoidVisualLayers.Head"
    - "enum.HumanoidVisualLayers.LArm"
    - "enum.HumanoidVisualLayers.LLeg"
    - "enum.HumanoidVisualLayers.RArm"
    - "enum.HumanoidVisualLayers.RLeg"
    damageOverlayGroups:
      Brute:
        sprite: Mobs/Effects/brute_damage.rsi
        color: "#FF0000"
      Burn:
        sprite: Mobs/Effects/burn_damage.rsi
  - type: GenericVisualizer
    visuals:
      enum.CreamPiedVisuals.Creamed:
        clownedon: # Not 'creampied' bc I can already see Skyrat complaining about conflicts.
          True: {visible: true}
          False: {visible: false}
  - type: StatusIcon
    bounds: -0.5,-0.5,0.5,0.5
  - type: RotationVisuals
    defaultRotation: 90
    horizontalRotation: 90
  - type: HumanoidAppearance
    species: Human
  - type: TypingIndicator
  - type: SlowOnDamage
    speedModifierThresholds:
      60: 0.7
      80: 0.5
  - type: Fixtures
    fixtures: # TODO: This needs a second fixture just for mob collisions.
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 185
        restitution: 0.0
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: FloorOcclusion
  - type: RangedDamageSound
    soundGroups:
      Brute:
        collection:
          MeatBulletImpact
    soundTypes:
      Heat:
        collection:
          MeatLaserImpact
  - type: Reactive
    groups:
      Flammable: [ Touch ]
      Extinguish: [ Touch ]
      Acidic: [Touch, Ingestion]
    reactions:
    - reagents: [Water, SpaceCleaner]
      methods: [Touch]
      effects:
      - !type:WashCreamPieReaction
  - type: StatusEffects
    allowed:
    - Electrocution
    - RatvarianLanguage
    - PressureImmunity
    - Muted
    - TemporaryBlindness
    - Pacified
    - StaminaModifier
    - Flashed
    - RadiationProtection
    - Adrenaline
    - Feminized # DeltaV - Hormone system
    - Masculinized # DeltaV - Hormone system
    - GrayLanguage # imp
    - RelentlessPositivity # imp
    - PGAccent # imp
  - type: Body
    prototype: Human
    requiredLegs: 2
  - type: Identity
  - type: IdExaminable
  - type: Hands
  - type: ComplexInteraction
  - type: Internals
  - type: FloatingVisuals
  - type: Climbing
  - type: Cuffable
  - type: Ensnareable
    sprite: Objects/Misc/ensnare.rsi
    state: icon
  - type: AnimationPlayer
  - type: Buckle
  - type: CombatMode
    canDisarm: true
  - type: MeleeWeapon
    soundHit:
      collection: Punch
    angle: 30
    animation: WeaponArcFist
    attackRate: 1
    damage:
      types:
        Blunt: 5
  - type: SleepEmitSound
  - type: SSDIndicator
  - type: StandingState
  - type: Crawler
  - type: Dna
  - type: MindContainer
    showExamineInfo: true
  - type: CanEnterCryostorage
  - type: InteractionPopup
    successChance: 1
    interactSuccessString: hugging-success-generic
    interactSuccessSound: /Audio/Effects/thudswoosh.ogg
    messagePerceivedByOthers: hugging-success-generic-others
  - type: CanHostGuardian
  - type: NpcFactionMember
    factions:
    - NanoTrasen
  - type: CreamPied
  - type: Stripping
  - type: UserInterface
    interfaces:
      enum.HumanoidMarkingModifierKey.Key:
        type: HumanoidMarkingModifierBoundUserInterface
      enum.StrippingUiKey.Key:
        type: StrippableBoundUserInterface
      enum.StoreUiKey.Key:
        type: StoreBoundUserInterface
      enum.ThavenMoodsUiKey.Key: # impstation edit
        type: ThavenMoodsBoundUserInterface
        requireInputValidation: false
  - type: Puller
  - type: Speech
    speechSounds: Alto
  - type: DamageForceSay
  - type: Vocal
    sounds:
      Male: MaleHuman
      Female: FemaleHuman
      Unsexed: UnisexHuman
  - type: Emoting
  - type: BodyEmotes
    soundsId: GeneralBodyEmotes
  - type: Grammar
    attributes:
      proper: true
  - type: MobPrice
    price: 1500 # Kidnapping a living person and selling them for cred is a good move.
    deathPenalty: 0.01 # However they really ought to be living and intact, otherwise they're worth 100x less.
  - type: CanEscapeInventory # Carrying system from nyanotrasen.
  # Begin Offbrand
  - type: Woundable
  - type: Heartrate
    asphyxiationDamage: Asphyxiation
    asphyxiationThreshold: 100
    maxDamage: 50
    damage: 0
    strainDamageThresholds:
      1: [0.04, 1]
      2: [0.1, 1]
      3: [0.3, 1]
      4: [0.4, 1]
    circulationStrainModifierCoefficient: 0.075
    circulationStrainModifierConstant: 1.025
    stoppedBloodCirculationModifier: 0.2
    minimumDamageCirculationModifier: 0.3
    shockStrainDivisor: 40
    bloodPressureDeviation: 5
    systolicBase: 120
    diastolicBase: 80
    heartRateDeviation: 15
    heartRateBase: 75
    heartRateStrainFactor: 200
    heartRateStrainDivisor: 6
    heartStoppedEffect: StatusEffectHeartStopped
  - type: HeartDefibrillatable
  - type: HeartStopOnHypovolemia
    chance: 0.8
    volumeThreshold: 0.3
  - type: HeartStopOnHighStrain
    chance: 0.05
    threshold: 4
  - type: HeartStopOnBrainHealth
    chance: 0.8
    threshold: 60
  - type: Pain
    painMultiplier: 1.25
    maxShockIncreasePerSecond: 36
    maxShockDecreasePerSecond: 12
    doubleShockRecoveryThreshold: 0.5
  - type: HeartrateAlerts
    strainAlert: HeartRate
    stoppedAlert: HeartStopped
    alertCategory: Health
    maxStrain: 4
  - type: StatusEffectContainer
  - type: ShockThresholds
    thresholds:
      10: StatusEffectMinorPain
      30: StatusEffectModeratePain
      60: StatusEffectSeverePain
      120: StatusEffectBlackoutPain
  - type: ShockAlerts
    alertCategory: Pain
    suppressedAlert: SuppressedPain
    thresholds:
      0: NoPain
      10: MinorPain
      30: ModeratePain
      60: SeverePain
      120: BlackoutPain
  - type: SolutionContainerManager
  - type: InjectableSolution
    solution: chemicals
  - type: Bloodstream
    bleedReductionAmount: 0
    damageBleedModifiers: null
    bloodlossDamage: null
    bloodlossHealDamage: null
    updateInterval: 1
  - type: BrainDamage
    maxDamage: 100
    damage: 0
    maxOxygen: 10
    oxygen: 10
  - type: BrainDamageOxygenation
    oxygenationDamageThresholds:
      0.10: [1.0, [100, 1]]
      0.30: [0.9, [ 90, 1]]
      0.60: [0.8, [ 60, 1]]
      0.70: [0.6, [ 40, 1]]
      0.85: [0.5, [ 20, 1]]
    oxygenDepletionThresholds:
      0.30: [0.6, 1]
    oxygenRegeneration: 1
    maxPassivelyHealableDamage: 30
    damageHealing: 1
  - type: BrainDamageThresholds
    damageStateThresholds:
      70: Critical
      100: Dead
    oxygenStateThresholds: {}
    damageEffectThresholds:
      30: StatusEffectSevereBrainDamage
      70: StatusEffectCriticalBrainDamage
    damageAlertThresholds:
      30: SevereBrainDamage
      70: CriticalBrainDamage
      100: BrainDead
    damageAlertCategory: BrainDamage
    oxygenEffectThresholds:
      0: StatusEffectBrainNoOxygen
    aliveDamageIcons:
    - HealthIconNormal7
    - HealthIconNormal6
    - HealthIconNormal5
    - HealthIconNormal4
    - HealthIconNormal3
    - HealthIconNormal2
    - HealthIconNormal1
    criticalDamageIcons:
    - HealthIconCritical7
    - HealthIconCritical6
    - HealthIconCritical5
    - HealthIconCritical4
    - HealthIconCritical3
    - HealthIconCritical2
    - HealthIconCritical1
    deadIcon: HealthIconBrainDead
  - type: MaximumDamage
    damage:
      Blunt: 200
      Slash: 200
      Piercing: 200
      Heat: 200
      Cold: 200
      Caustic: 200
      Shock: 200
      Poison: 100
      Radiation: 100
      Cellular: 100
      Asphyxiation: 100
      Bloodloss: 0
  - type: IntrinsicPain
    painCoefficients:
      Poison: 0.7
      Radiation: 0.7
      Cellular: 0.7
  - type: HealthExaminable
    examinableTypes:
    - Asphyxiation
    - Radiation
  - type: CprTarget
    effect: StatusEffectActiveCPR
    effectDuration: 2.1
    doAfterDuration: 2
    wound: WoundFracture
    woundProbability: 0.03
  - type: Construction
    graph: SurgeryGraph
    node: Base
    deconstructionTarget: null
  - type: CryostasisFactor
    temperatureCoefficient: -0.06
    temperatureConstant: 20
  - type: UniqueWoundOnDamage
    wounds:
    - damageTypes: [Slash, Blunt, Piercing]
      minimumDamage: 15
      minimumTotalDamage: 25
      woundPrototype: WoundArterialBleeding
      woundDamages:
        damageDict:
          Slash: 5
      damageProbabilityCoefficient: 0.01
      damageProbabilityConstant: 0
    - damageTypes: [Blunt]
      minimumDamage: 20
      minimumTotalDamage: 40
      woundPrototype: WoundFracture
      woundDamages:
        damageDict:
          Blunt: 10
      damageProbabilityCoefficient: 0.005
      damageProbabilityConstant: 0
  - type: IVTarget

  - type: Deathgasp
  - type: Damageable
    damageContainer: Biological
  - type: RadiationReceiver
  - type: Stamina
  - type: MobState
  - type: DamageOnHighSpeedImpact
    damage:
      types:
        Blunt: 5
    soundHit:
      path: /Audio/Effects/hit_kick.ogg
  - type: Pullable
  - type: LightningTarget
    priority: 2
    lightningExplode: false
  # End Offbrand
  - type: Tag
    tags:
    - CanPilot
    - FootstepSound
    - DoorBumpOpener
    - AnomalyHost

- type: entity
  save: false
  parent:
  # - MobBloodstream - Offbrand - we're doing our own thign with this
  - MobRespirator
  - MobAtmosStandard
  - MobFlammable
  - BaseMobSpecies
  id: BaseMobSpeciesOrganic
  abstract: true
  components:
  - type: Barotrauma
    damage:
      types:
        Blunt: 0.50 #per second, scales with pressure and other constants.
        Heat: 0.1
  - type: PassiveDamage # Slight passive regen. Assuming one damage type, comes out to about 4 damage a minute.
    allowedStates:
    - Alive
    damageCap: 20
    damage:
      types:
        Heat: -0.07
      groups:
        Brute: -0.07
  - type: Fingerprint
  - type: Blindable
  # Other
  - type: Temperature
    heatDamageThreshold: 325
    coldDamageThreshold: 260
    currentTemperature: 310.15
    specificHeat: 42
    coldDamage:
      types:
        Cold: 0.1 #per second, scales with temperature & other constants
    heatDamage:
      types:
        Heat: 1.5 #per second, scales with temperature & other constants
  - type: TemperatureSpeed
    thresholds:
      293: 0.9
      280: 0.8
      260: 0.7
  - type: ThermalRegulator
    metabolismHeat: 800
    radiatedHeat: 100
    implicitHeatRegulation: 500
    sweatHeatRegulation: 2000
    shiveringHeatRegulation: 2000
    normalBodyTemperature: 310.15
    thermalRegulationTemperatureThreshold: 2
  - type: Perishable
  - type: Butcherable
    butcheringType: Spike # TODO human.
    spawned:
    - id: FoodMeat
      amount: 5
  - type: Respirator
    damage:
      types:
        Asphyxiation: 1.0
    damageRecovery:
      types:
        Asphyxiation: -1.0
  - type: FireVisuals
    alternateState: Standing
  - type: StunVisuals

- type: entity
  save: false
  id: BaseSpeciesDummy
  parent: InventoryBase
  abstract: true
  components:
  - type: Hands
  - type: ComplexInteraction
  - type: ContainerContainer
  - type: Icon
    sprite: Mobs/Species/Human/parts.rsi
    state: full
  - type: Sprite
    drawdepth: Mobs
    noRot: true
    # TODO BODY Turn these into individual body parts?
    layers:
    - map: [ "enum.HumanoidVisualLayers.TailBehind" ]
    - map: [ "enum.HumanoidVisualLayers.Chest" ]
    - map: [ "enum.HumanoidVisualLayers.Head" ]
    - map: [ "enum.HumanoidVisualLayers.Snout" ]
    - map: [ "enum.HumanoidVisualLayers.Eyes" ]
    - map: [ "enum.HumanoidVisualLayers.RArm" ]
    - map: [ "enum.HumanoidVisualLayers.LArm" ]
    - map: [ "enum.HumanoidVisualLayers.RLeg" ]
    - map: [ "enum.HumanoidVisualLayers.LLeg" ]
    - map: [ "enum.HumanoidVisualLayers.UndergarmentBottom" ]
    - map: [ "enum.HumanoidVisualLayers.UndergarmentTop" ]
    - map: ["jumpsuit"]
    - map: ["enum.HumanoidVisualLayers.LFoot"]
    - map: ["enum.HumanoidVisualLayers.RFoot"]
    - map: ["enum.HumanoidVisualLayers.LHand"]
    - map: ["enum.HumanoidVisualLayers.RHand"]
    - map: ["enum.HumanoidVisualLayers.Handcuffs"]
      color: "#ffffff"
      sprite: Objects/Misc/handcuffs.rsi
      state: body-overlay-2
      visible: false
    - map: [ "gloves" ]
    - map: [ "shoes" ]
    - map: [ "ears" ]
    - map: [ "eyes" ]
    - map: [ "belt" ]
    - map: [ "id" ]
    - map: [ "outerClothing" ]
    - map: [ "back" ]
    - map: [ "enum.HumanoidVisualLayers.TailOversuit" ]
    - map: [ "neck" ]
    - map: [ "enum.HumanoidVisualLayers.SnoutCover" ]
    - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
    - map: [ "enum.HumanoidVisualLayers.Hair" ]
    - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
    - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
    - map: [ "enum.HumanoidVisualLayers.Tail" ]
    - map: [ "mask" ]
    - map: [ "head" ]
    - map: [ "pocket1" ]
    - map: [ "pocket2" ]
  - type: Appearance
  - type: HumanoidAppearance
    species: Human
  - type: Body
    prototype: Human
    requiredLegs: 2
  - type: GoobAbsorbable
  - type: UserInterface
    interfaces:
      enum.HumanoidMarkingModifierKey.Key: # sure, this can go here too
        type: HumanoidMarkingModifierBoundUserInterface
